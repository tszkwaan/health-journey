// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/security" | "/appointments/new" | "/doctor/appointments" | "/doctor/reservations/[id]" | "/doctor/reservations/[id]/forms" | "/intake" | "/login" | "/onboarding" | "/patient/medical-background" | "/patient/reservations" | "/patient/reservations/[id]" | "/register/doctor" | "/register/patient" | "/settings"
type AppRouteHandlerRoutes = "/api/audit" | "/api/audit/phi" | "/api/auth/[...nextauth]" | "/api/consent" | "/api/doctor/appointments" | "/api/doctors" | "/api/doctors/[id]" | "/api/doctors/[id]/slots" | "/api/forms/generate" | "/api/forms/generate-ir" | "/api/intake/message" | "/api/intake/session" | "/api/intake/start" | "/api/medical-background" | "/api/medical-background/summarize" | "/api/patient/reservations" | "/api/patient/reservations/[id]" | "/api/register/doctor" | "/api/register/patient" | "/api/reservations" | "/api/reservations/[id]" | "/api/reservations/[id]/chat" | "/api/reservations/[id]/consultation" | "/api/reservations/[id]/enhanced-summary" | "/api/reservations/[id]/forms" | "/api/test/create-doctor" | "/api/test/create-intake" | "/api/test/create-medical-background" | "/api/test/create-patient" | "/api/test/create-reservation" | "/api/test/doctors/[id]" | "/api/test/generate-provenance" | "/api/test/parallel-pipeline" | "/api/test/patients/[id]" | "/api/test/redact-phi" | "/api/test/reservations/[id]" | "/api/test/ultra-optimized" | "/api/user/settings"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = "/[[...slug]]"
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/[[...slug]]": { "slug"?: string[]; }
  "/admin/security": {}
  "/api/audit": {}
  "/api/audit/phi": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/consent": {}
  "/api/doctor/appointments": {}
  "/api/doctors": {}
  "/api/doctors/[id]": { "id": string; }
  "/api/doctors/[id]/slots": { "id": string; }
  "/api/forms/generate": {}
  "/api/forms/generate-ir": {}
  "/api/intake/message": {}
  "/api/intake/session": {}
  "/api/intake/start": {}
  "/api/medical-background": {}
  "/api/medical-background/summarize": {}
  "/api/patient/reservations": {}
  "/api/patient/reservations/[id]": { "id": string; }
  "/api/register/doctor": {}
  "/api/register/patient": {}
  "/api/reservations": {}
  "/api/reservations/[id]": { "id": string; }
  "/api/reservations/[id]/chat": { "id": string; }
  "/api/reservations/[id]/consultation": { "id": string; }
  "/api/reservations/[id]/enhanced-summary": { "id": string; }
  "/api/reservations/[id]/forms": { "id": string; }
  "/api/test/create-doctor": {}
  "/api/test/create-intake": {}
  "/api/test/create-medical-background": {}
  "/api/test/create-patient": {}
  "/api/test/create-reservation": {}
  "/api/test/doctors/[id]": { "id": string; }
  "/api/test/generate-provenance": {}
  "/api/test/parallel-pipeline": {}
  "/api/test/patients/[id]": { "id": string; }
  "/api/test/redact-phi": {}
  "/api/test/reservations/[id]": { "id": string; }
  "/api/test/ultra-optimized": {}
  "/api/user/settings": {}
  "/appointments/new": {}
  "/doctor/appointments": {}
  "/doctor/reservations/[id]": { "id": string; }
  "/doctor/reservations/[id]/forms": { "id": string; }
  "/intake": {}
  "/login": {}
  "/onboarding": {}
  "/patient/medical-background": {}
  "/patient/reservations": {}
  "/patient/reservations/[id]": { "id": string; }
  "/register/doctor": {}
  "/register/patient": {}
  "/settings": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
