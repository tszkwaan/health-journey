// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/admin/security/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/security">> = Specific
  const handler = {} as typeof import("../../src/app/admin/security/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/appointments/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/appointments/new">> = Specific
  const handler = {} as typeof import("../../src/app/appointments/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/doctor/appointments/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/doctor/appointments">> = Specific
  const handler = {} as typeof import("../../src/app/doctor/appointments/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/doctor/reservations/[id]/forms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/doctor/reservations/[id]/forms">> = Specific
  const handler = {} as typeof import("../../src/app/doctor/reservations/[id]/forms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/doctor/reservations/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/doctor/reservations/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/doctor/reservations/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/intake/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/intake">> = Specific
  const handler = {} as typeof import("../../src/app/intake/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/onboarding/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/onboarding">> = Specific
  const handler = {} as typeof import("../../src/app/onboarding/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/patient/medical-background/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patient/medical-background">> = Specific
  const handler = {} as typeof import("../../src/app/patient/medical-background/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/patient/reservations/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patient/reservations/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/patient/reservations/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/patient/reservations/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/patient/reservations">> = Specific
  const handler = {} as typeof import("../../src/app/patient/reservations/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/register/doctor/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register/doctor">> = Specific
  const handler = {} as typeof import("../../src/app/register/doctor/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/register/patient/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register/patient">> = Specific
  const handler = {} as typeof import("../../src/app/register/patient/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../src/app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/audit/phi/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/audit/phi">> = Specific
  const handler = {} as typeof import("../../src/app/api/audit/phi/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/audit/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/audit">> = Specific
  const handler = {} as typeof import("../../src/app/api/audit/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/consent/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/consent">> = Specific
  const handler = {} as typeof import("../../src/app/api/consent/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/doctor/appointments/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/doctor/appointments">> = Specific
  const handler = {} as typeof import("../../src/app/api/doctor/appointments/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/doctors/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/doctors/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/doctors/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/doctors/[id]/slots/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/doctors/[id]/slots">> = Specific
  const handler = {} as typeof import("../../src/app/api/doctors/[id]/slots/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/doctors/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/doctors">> = Specific
  const handler = {} as typeof import("../../src/app/api/doctors/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/forms/generate-ir/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/forms/generate-ir">> = Specific
  const handler = {} as typeof import("../../src/app/api/forms/generate-ir/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/forms/generate/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/forms/generate">> = Specific
  const handler = {} as typeof import("../../src/app/api/forms/generate/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/intake/message/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/intake/message">> = Specific
  const handler = {} as typeof import("../../src/app/api/intake/message/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/intake/session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/intake/session">> = Specific
  const handler = {} as typeof import("../../src/app/api/intake/session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/intake/start/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/intake/start">> = Specific
  const handler = {} as typeof import("../../src/app/api/intake/start/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/medical-background/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/medical-background">> = Specific
  const handler = {} as typeof import("../../src/app/api/medical-background/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/medical-background/summarize/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/medical-background/summarize">> = Specific
  const handler = {} as typeof import("../../src/app/api/medical-background/summarize/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/patient/reservations/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/patient/reservations/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/patient/reservations/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/patient/reservations/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/patient/reservations">> = Specific
  const handler = {} as typeof import("../../src/app/api/patient/reservations/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/register/doctor/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/register/doctor">> = Specific
  const handler = {} as typeof import("../../src/app/api/register/doctor/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/register/patient/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/register/patient">> = Specific
  const handler = {} as typeof import("../../src/app/api/register/patient/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/reservations/[id]/chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reservations/[id]/chat">> = Specific
  const handler = {} as typeof import("../../src/app/api/reservations/[id]/chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/reservations/[id]/consultation/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reservations/[id]/consultation">> = Specific
  const handler = {} as typeof import("../../src/app/api/reservations/[id]/consultation/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/reservations/[id]/enhanced-summary/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reservations/[id]/enhanced-summary">> = Specific
  const handler = {} as typeof import("../../src/app/api/reservations/[id]/enhanced-summary/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/reservations/[id]/forms/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reservations/[id]/forms">> = Specific
  const handler = {} as typeof import("../../src/app/api/reservations/[id]/forms/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/reservations/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reservations/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/reservations/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/reservations/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reservations">> = Specific
  const handler = {} as typeof import("../../src/app/api/reservations/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/create-doctor/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/create-doctor">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/create-doctor/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/create-intake/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/create-intake">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/create-intake/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/create-medical-background/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/create-medical-background">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/create-medical-background/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/create-patient/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/create-patient">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/create-patient/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/create-reservation/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/create-reservation">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/create-reservation/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/doctors/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/doctors/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/doctors/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/generate-provenance/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/generate-provenance">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/generate-provenance/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/parallel-pipeline/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/parallel-pipeline">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/parallel-pipeline/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/patients/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/patients/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/patients/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/redact-phi/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/redact-phi">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/redact-phi/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/reservations/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/reservations/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/reservations/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test/ultra-optimized/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test/ultra-optimized">> = Specific
  const handler = {} as typeof import("../../src/app/api/test/ultra-optimized/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/user/settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/settings">> = Specific
  const handler = {} as typeof import("../../src/app/api/user/settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
